{"ast":null,"code":"var _jsxFileName = \"/Users/meave/react-postgres/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [imags, setImags] = useState(false);\n  useEffect(() => {\n    getImags();\n  }, []);\n\n  function getImags() {\n    fetch('http://localhost:3001').then(response => {\n      return response.text();\n    }).then(data => {\n      setImags(data);\n    });\n  }\n\n  function createImags() {\n    let bibNo = prompt('Enter bib number'); // let imagName = prompt('Enter imag name');\n    // let eventName = prompt('Enter event name');\n\n    fetch('http://localhost:3001', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        bibNo\n      })\n    }).then(response => {\n      return response.text();\n    }).then(data => {\n      alert(data);\n      getImags();\n    });\n  }\n\n  function deleteImags() {\n    let bibNumber = prompt('Enter bib number');\n    fetch('http://localhost:3001/${bibNumber}', {\n      method: 'DELETE'\n    }).then(response => {\n      return response.text();\n    }).then(data => {\n      alert(data);\n      getImags();\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [imags ? imags : 'There is no imags data available', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createImags,\n      children: \"Add imag\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: deleteImags,\n      children: \"Delete imag\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"wQTT38/ZhdPEvz4oQL6bhXHqb4Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/meave/react-postgres/src/App.js"],"names":["React","useState","useEffect","App","imags","setImags","getImags","fetch","then","response","text","data","createImags","bibNo","prompt","method","headers","body","JSON","stringify","alert","deleteImags","bibNumber"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,KAAD,CAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;;AAGA,WAASA,QAAT,GAAoB;AAClBC,IAAAA,KAAK,CAAC,uBAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAI;AAChB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAHH,EAIGF,IAJH,CAIQG,IAAI,IAAI;AACZN,MAAAA,QAAQ,CAACM,IAAD,CAAR;AACD,KANH;AAOD;;AACD,WAASC,WAAT,GAAuB;AACrB,QAAIC,KAAK,GAAGC,MAAM,CAAC,kBAAD,CAAlB,CADqB,CAErB;AACA;;AACAP,IAAAA,KAAK,CAAC,uBAAD,EAA0B;AAC7BQ,MAAAA,MAAM,EAAE,KADqB;AAE7BC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFoB;AAK7BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACN,QAAAA;AAAD,OAAf;AALuB,KAA1B,CAAL,CAOGL,IAPH,CAOQC,QAAQ,IAAI;AAChB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KATH,EAUGF,IAVH,CAUQG,IAAI,IAAI;AACZS,MAAAA,KAAK,CAACT,IAAD,CAAL;AACAL,MAAAA,QAAQ;AACT,KAbH;AAcD;;AACD,WAASe,WAAT,GAAuB;AACrB,QAAIC,SAAS,GAAGR,MAAM,CAAC,kBAAD,CAAtB;AACAP,IAAAA,KAAK,CAAC,oCAAD,EAAuC;AAC1CQ,MAAAA,MAAM,EAAE;AADkC,KAAvC,CAAL,CAGGP,IAHH,CAGQC,QAAQ,IAAI;AAChB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KALH,EAMGF,IANH,CAMQG,IAAI,IAAI;AACZS,MAAAA,KAAK,CAACT,IAAD,CAAL;AACAL,MAAAA,QAAQ;AACT,KATH;AAUD;;AACD,sBACE;AAAA,eACGF,KAAK,GAAGA,KAAH,GAAW,kCADnB,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEQ,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAQ,MAAA,OAAO,EAAES,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAvDQlB,G;;KAAAA,G;AAwDT,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nfunction App() {\n  const [imags, setImags] = useState(false);\n  useEffect(() => {\n    getImags();\n  }, []);\n  function getImags() {\n    fetch('http://localhost:3001')\n      .then(response => {\n        return response.text();\n      })\n      .then(data => {\n        setImags(data);\n      });\n  }\n  function createImags() {\n    let bibNo = prompt('Enter bib number');\n    // let imagName = prompt('Enter imag name');\n    // let eventName = prompt('Enter event name');\n    fetch('http://localhost:3001', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({bibNo}),\n    })\n      .then(response => {\n        return response.text();\n      })\n      .then(data => {\n        alert(data);\n        getImags();\n      });\n  }\n  function deleteImags() {\n    let bibNumber = prompt('Enter bib number');\n    fetch('http://localhost:3001/${bibNumber}', {\n      method: 'DELETE',\n    })\n      .then(response => {\n        return response.text();\n      })\n      .then(data => {\n        alert(data);\n        getImags();\n      });\n  }\n  return (\n    <div>\n      {imags ? imags : 'There is no imags data available'}\n      <br />\n      <button onClick={createImags}>Add imag</button>\n      <br />\n      <button onClick={deleteImags}>Delete imag</button>\n    </div>\n  );\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}