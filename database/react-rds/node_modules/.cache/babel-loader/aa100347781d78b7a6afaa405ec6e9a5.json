{"ast":null,"code":"var _jsxFileName = \"/Users/meave/react-postgres/src/App.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [imgs, setImgs] = useState(false);\n  useEffect(() => {\n    getImgs();\n  }, []);\n\n  function getImgs() {\n    fetch('http://localhost:3001').then(response => {\n      return response.text();\n    }).then(data => {\n      setImgs(data);\n    });\n  }\n\n  function queryImgs() {\n    _s();\n\n    const history = useHistory();\n    let argument = prompt('Enter bib number');\n    history.push('/${argument}'); // let imgName = prompt('Enter image name');\n    // let eventName = prompt('Enter event name');\n\n    fetch('http://localhost:3001/${argument}') //, {\n    // method: 'GET',\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //   },\n    //   body: JSON.stringify({bibNo}),\n    // })\n    .then(response => {\n      return response.text();\n    }).then(data => {\n      alert(data);\n      getImgs();\n    });\n  } // function deleteImgs() {\n  //   let bibNumber = prompt('Enter bib number');\n  //   fetch('http://localhost:3001/${bibNumber}', {\n  //     method: 'DELETE',\n  //   })\n  //     .then(response => {\n  //       return response.text();\n  //     })\n  //     .then(data => {\n  //       alert(data);\n  //       getImgs();\n  //     });\n  // }\n\n\n  _s(queryImgs, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n    return [useHistory];\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [imgs ? imgs : 'There is no images data available', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: queryImgs,\n      children: \"Query image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"NSS/XbTutnI7zOy3giBizB9+y84=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/meave/react-postgres/src/App.js"],"names":["React","useState","useEffect","useHistory","App","imgs","setImgs","getImgs","fetch","then","response","text","data","queryImgs","history","argument","prompt","push","alert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,KAAD,CAAhC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASA,OAAT,GAAmB;AACjBC,IAAAA,KAAK,CAAC,uBAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAI;AAChB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAHH,EAIGF,IAJH,CAIQG,IAAI,IAAI;AACZN,MAAAA,OAAO,CAACM,IAAD,CAAP;AACD,KANH;AAOD;;AAED,WAASC,SAAT,GAAqB;AAAA;;AACnB,UAAMC,OAAO,GAAGX,UAAU,EAA1B;AACA,QAAIY,QAAQ,GAAGC,MAAM,CAAC,kBAAD,CAArB;AACAF,IAAAA,OAAO,CAACG,IAAR,CAAa,cAAb,EAHmB,CAInB;AACA;;AACAT,IAAAA,KAAK,CAAC,mCAAD,CAAL,CAA0C;AACxC;AACF;AACA;AACA;AACA;AACA;AANA,KAOGC,IAPH,CAOQC,QAAQ,IAAI;AAChB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KATH,EAUGF,IAVH,CAUQG,IAAI,IAAI;AACZM,MAAAA,KAAK,CAACN,IAAD,CAAL;AACAL,MAAAA,OAAO;AACR,KAbH;AAcD,GApCY,CAqCb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAjDa,KAgBJM,SAhBI;AAAA,YAiBKV,UAjBL;AAAA;;AAkDb,sBACE;AAAA,eACGE,IAAI,GAAGA,IAAH,GAAU,mCADjB,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEQ,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;IA3DQT,G;;KAAAA,G;AA4DT,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nfunction App() {\n  const [imgs, setImgs] = useState(false);\n  useEffect(() => {\n    getImgs();\n  }, []);\n\n  function getImgs() {\n    fetch('http://localhost:3001')\n      .then(response => {\n        return response.text();\n      })\n      .then(data => {\n        setImgs(data);\n      });\n  }\n\n  function queryImgs() {\n    const history = useHistory();\n    let argument = prompt('Enter bib number');\n    history.push('/${argument}')\n    // let imgName = prompt('Enter image name');\n    // let eventName = prompt('Enter event name');\n    fetch('http://localhost:3001/${argument}')//, {\n      // method: 'GET',\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //   },\n    //   body: JSON.stringify({bibNo}),\n    // })\n      .then(response => {\n        return response.text();\n      })\n      .then(data => {\n        alert(data);\n        getImgs();\n      });\n  }\n  // function deleteImgs() {\n  //   let bibNumber = prompt('Enter bib number');\n  //   fetch('http://localhost:3001/${bibNumber}', {\n  //     method: 'DELETE',\n  //   })\n  //     .then(response => {\n  //       return response.text();\n  //     })\n  //     .then(data => {\n  //       alert(data);\n  //       getImgs();\n  //     });\n  // }\n  return (\n    <div>\n      {imgs ? imgs : 'There is no images data available'}\n      <br />\n      <button onClick={queryImgs}>Query image</button>\n      {// <br />\n      /* <button onClick={deleteImgs}>Delete image</button> */}\n    </div>\n  );\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}